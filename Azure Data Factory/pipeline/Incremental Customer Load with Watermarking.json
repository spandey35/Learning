{
	"name": "Incremental Customer Load with Watermarking",
	"properties": {
		"description": "This Trigger will get the customer data from salesLT.customer and based on the water mark value it get the records and load it into Azure blob.",
		"activities": [
			{
				"name": "If Condition",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "GET CONFIGURATION VALUE FOR MAX MODIFIED DATE",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Max Modified Date for Customer Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(activity('Max Modified Date for Customer Table').output.firstRow.MaxModifiedDate,activity('GET CONFIGURATION VALUE FOR MAX MODIFIED DATE').output.firstRow.Value)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Copy data",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "@concat(\n  'select * from SalesLT.Customer where ModifiedDate >= ''',\n  activity('GET CONFIGURATION VALUE FOR MAX MODIFIED DATE').output.firstRow.Value,\n  ''''\n)\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Local_All_tables",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ADLS_Destination",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Update Watermark",
							"description": "",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Set Souce",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Set Sink",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Set Rows",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Inserted Rows",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "Local_Sql_Server_Suraj",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": "update SalesLT.ETL_Configuration set VALUE = \nconvert(nvarchar(200),(select max(ModifiedDate) from SalesLT.Customer),121)\nwhere VALUE_CLASS='SalesLT.Customer'\n"
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Set Souce",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy data",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "Source",
								"value": {
									"value": "@activity('Copy data').output.executionDetails[0].source.type",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set Sink",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy data",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "Sink",
								"value": {
									"value": "@activity('Copy data').output.executionDetails[0].sink.type",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Update ETL Tables",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Update Watermark",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "Local_Sql_Server_Suraj",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "update SalesLT.ETL_LOAD_LOG \n    set \n        SOURCE_NAME = '@{variables('Source')}', \n        TARGET_NAME = '@{variables('Sink')}',\n        INPUT_ROWS  = '@{variables('InputRows')}',\n        INSERTED_ROWS = '@{variables('InsertedRows')}'\nwhere JOB_ID = '@{pipeline().RunId}'",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Set Rows",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy data",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "InputRows",
								"value": {
									"value": "@activity('Copy data').output.rowsRead",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Inserted Rows",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy data",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "InsertedRows",
								"value": {
									"value": "@activity('Copy data').output.rowsCopied",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "GET CONFIGURATION VALUE FOR MAX MODIFIED DATE",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ETL_Logging",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "@concat('Select Value from SalesLT.ETL_Configuration where VALUE_CLASS = ''SalesLT.Customer'' and SETUP_ID =' , pipeline().parameters.setup_id) ",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Local_All_tables",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Max Modified Date for Customer Table",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ETL_Logging",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "SELECT CONVERT(NVARCHAR(200), MAX(ModifiedDate), 121) AS MaxModifiedDate\nFROM SalesLT.Customer\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Local_All_tables",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Pipeline_StartTiming",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Pipeline_StartTiming",
					"value": {
						"value": "@formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd HH:mm:ss.fff')\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Pipeline_EndTiming",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "If Condition",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Pipeline_EndTiming",
					"value": {
						"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:ss.fff')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ETL_Logging",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Pipeline_StartTiming",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "Local_Sql_Server_Suraj",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "INSERT INTO SalesLT.ETL_LOAD_LOG VALUES (\n    '@{pipeline().RunId}',\n    '@{pipeline().Pipeline}',\n     NULL,\n     NULL,\n    'ETL_Load_Log',\n    NULL, NULL, NULL, NULL, NULL,\n    '@{variables('Pipeline_StartTiming')}',\n    NULL,\n    'InProgress',\n    '@{pipeline().parameters.setup_id}',\n    NULL\n);\n",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Update ETL_Logging",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Pipeline_EndTiming",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "Local_Sql_Server_Suraj",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "update SalesLT.ETL_LOAD_LOG set END_DATE='@{variables('Pipeline_EndTiming')}' , STATUS='Completed' \nwhere JOB_ID = '@{pipeline().RunId}'",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"parameters": {
			"setup_id": {
				"type": "string",
				"defaultValue": "1001"
			}
		},
		"variables": {
			"LastRunDateforCustomer": {
				"type": "String"
			},
			"LastModifiedDateforCustomer": {
				"type": "String"
			},
			"Pipeline_StartTiming": {
				"type": "String"
			},
			"Pipeline_EndTiming": {
				"type": "String"
			},
			"Source": {
				"type": "String"
			},
			"Sink": {
				"type": "String"
			},
			"InputRows": {
				"type": "Integer"
			},
			"FilePath": {
				"type": "Integer"
			},
			"InsertedRows": {
				"type": "Integer"
			}
		},
		"annotations": [
			"Suraj Pandey"
		],
		"lastPublishTime": "2025-09-03T16:30:52Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}